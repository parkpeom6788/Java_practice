package abstract_interface;

public class ExamInterface {
	/*
	 * 인터페이스는 추상클래스의 일종이지만 보다 더 극단적인 경우이다
	 * 추상메서드로만 구성되며 abstract 와 다르게 메서드만 정의가 가능
	 * 공동 작업을 할때 메서드의 표준화를 시키기 위해 많이 사용
	 * 서로 다른 클래스를 연결할 때도 사용된다.
	 */
	public static void main(String[] args) {
		Door door = new Door();
		door.open();
		door.close();
		door.Red();
		door.Blue();
		
		Bottle bottle = new Bottle();
		bottle.open();
		bottle.close();
	}
	interface OpenCloseIf {
		public void open();
		public void close();
	}
	interface PaintIf {
		public void Red();
		public void Blue();
	}
	/*
	 * Interface는 implements 로 상속받으며
	 * extends 상속과는 다르게 다중 상속이 가능
	 */
	class Door implements OpenCloseIf , PaintIf {

		@Override
		public void Blue() {
			
		}
		@Override
		public void open() {
			
		}
		@Override
		public void close() {
			
		}
		@Override
		public void Red() {
			
		}
	}
	
}
